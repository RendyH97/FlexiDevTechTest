name: CICD Portal App

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allows manual trigger of the workflow

jobs:
  # Job 1: Checkout and build the Vue.js app
  build:
    runs-on: ubuntu-24.04

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.9.0'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Build the Vue.js application
      - name: Build Vue.js app
        run: npm run build

      # Step 5: Save build output as artifact
      - name: Save build artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: ./dist # Save the build file
      
      # Step 6: Save dockerfile as artifact
      - name: Save dockerfile artifact
        uses: actions/upload-artifact@v4
        with:
          name: dockerfile
          path: dockerfile # Save the dockerfile
      
      # Step 7: Save NGINX Config as artifact
      - name: Save nginx config artifact
        uses: actions/upload-artifact@v4
        with:
          name: nginx-config
          path: ./nginx # Save the NGINX configuration file

  # Job 2: Build Docker image and push to Docker Hub
  build-docker:
    runs-on: ubuntu-24.04
    needs: build # Depends on the 'build' job

    steps:
      # Step 1: Download the build artifact
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: ./dist # dist folder directory

      # Step 2: Download the dockerfile
      - name: Download dockerfile artifact
        uses: actions/download-artifact@v4
        with:
          name: dockerfile

      # Step 3: Download the NGINX configuration file
      - name: Download nginx config artifact
        uses: actions/download-artifact@v4
        with:
          name: nginx-config
          path: ./nginx # nginx folder directory

      # Step 4: Check directory
      - name: 'Check directory'
        run: |
          pwd
          ls

      # Step 5: Build Docker image and push to Docker Hub
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}
      - run: |
          docker build . -t rendyhz97/flexidev-tech-test:${{ github.sha }}
          docker push rendyhz97/flexidev-tech-test:${{ github.sha }}
      
      # Step 6: Docker Hub Logout
      - name: 'Docker Hub Logout'
        run: |
          docker logout

  # Job 3: Deploy Docker image to Azure App Service
  deploy:
    runs-on: ubuntu-latest
    needs: build-docker # Depends on the 'build-docker' job

    steps:
      # Step 1: Login to Azure
      - name: 'Login to Azure'
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 2: Deploy Docker image to Azure App Service
      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'portal-flexi-dev' # App Service name
          images: 'rendyhz97/flexidev-tech-test:${{ github.sha }}' # Docker image name

      # Step 3: Azure CLI Logout
      - name: 'Azure CLI Logout'
        run: |
          az logout